---
- name: Install Python, pip, and Gunicorn dependencies
  yum:
    name:
    - python3
    - python3-pip
    - python3-devel # Needed for psycopg2 compilation
    state: present

# We don't need to explicitly create the directory here if it's in site.yml pre_tasks,
# but keeping it doesn't hurt, so we'll leave it as a safe guard.
- name: Ensure Flask app directory exists
  file:
    path: /opt/apps/flask_app
    state: directory
    owner: ec2-user
    group: ec2-user

# --- ARTIFACT DEPLOYMENT ---
- name: Copy Flask artifact to server
  copy:
    # Use the relative path to the Jenkins workspace root
    src: "../{{ flask_artifact }}"
    dest: "{{ app_directory }}/" # Copies the .tar.gz file to /opt/apps/
    owner: ec2-user
    group: ec2-user
  when: flask_artifact != ""

- name: Extract Flask app
  unarchive:
    # Unarchives the file from the remote /opt/apps/ directory
    src: "{{ app_directory }}/{{ flask_artifact | basename }}"
    dest: /opt/apps/
    remote_src: true
    owner: ec2-user
    group: ec2-user
  when: flask_artifact != ""

- name: Install Flask dependencies (using requirements.txt from extracted artifact)
  pip:
    requirements: /opt/apps/flask_app/requirements.txt
    executable: pip3
  when: flask_artifact != ""

- name: Create Flask .env file
  copy:
    dest: /opt/apps/flask_app/.env
    content: |
      DATABASE_HOST={{ db_host }}
      DATABASE_PORT={{ db_port }}
      DATABASE_NAME={{ db_name }}
      DATABASE_USER={{ db_user }}
      DATABASE_PASSWORD={{ db_password }}
      FLASK_PORT={{ flask_port }}
    owner: ec2-user
    group: ec2-user
    mode: '0600'
  when: flask_artifact != ""

- name: Create systemd service for Flask app
  copy:
    dest: /etc/systemd/system/flask_app.service
    content: |
      [Unit]
      Description=Flask Application
      # Temporarily remove explicit Postgres dependencies for testing startup
      After=network.target postgresql.service # <--- RE-ADDED
      Wants=postgresql.service 

      [Service]
      Type=simple
      User=ec2-user
      WorkingDirectory=/opt/apps/flask_app
      Environment=PATH=/usr/local/bin:/usr/bin:/bin
      EnvironmentFile=/opt/apps/flask_app/.env
      # Ensure this command correctly executes gunicorn
      ExecStart=/usr/bin/python3 -m gunicorn --workers {{ flask_workers }} --bind 0.0.0.0:{{ flask_port }} app:app
      Restart=always
      RestartSec=10

      [Install]
      WantedBy=multi-user.target
  when: flask_artifact != ""

- name: Reload systemd, enable, and start Flask app
  systemd:
    name: flask_app
    state: started
    enabled: true
    daemon_reload: true
  when: flask_artifact != ""
