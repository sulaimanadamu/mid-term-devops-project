---
# Assumes 'dnf' is the package manager (correct for Amazon Linux 2023)

- name: Install PostgreSQL 15 packages
  ansible.builtin.dnf:
    name:
    - postgresql15-server
    - postgresql15-contrib
    - python3-psycopg2 # Required for the postgresql_user/db modules
    state: present
  become: true

- name: Initialize PostgreSQL database cluster
  # On Amazon Linux 2023, the command is 'postgresql-setup --initdb'
  # The path to the script is typically in the PATH after installing postgresql15-server.
  ansible.builtin.command:
    cmd: postgresql-setup --initdb
    # This checks for the existence of the main config file, making the task idempotent.
    creates: /var/lib/pgsql/data/postgresql.conf
  become: true

- name: Enable and start PostgreSQL service
  # For AL2023, the systemd service name is usually 'postgresql'
  # The postgresql-15 service name is typically used on RHEL/CentOS systems using the PGDG repo.
  ansible.builtin.service:
    name: postgresql
    state: started
    enabled: true
  become: true

# --- Database Configuration Tasks ---

- name: Create database user ({{ db_user }})
  ansible.builtin.postgresql_user:
    name: "{{ db_user }}"
    password: "{{ db_password }}"
    role_attr_flags: CREATEDB,LOGIN
  become: true
  become_user: postgres

- name: Create application database ({{ db_name }})
  ansible.builtin.postgresql_db:
    name: "{{ db_name }}"
    owner: "{{ db_user }}"
  become: true
  become_user: postgres

- name: Copy init.sql to server
  ansible.builtin.copy:
    src: ../db/init.sql
    dest: /tmp/init.sql
    mode: '0644'
  become: true

- name: Run init.sql to populate the database
  ansible.builtin.shell: "psql -d {{ db_name }} -f /tmp/init.sql"
  become: true
  become_user: postgres
  # Use 'shell' instead of 'command' for better execution context, although 'command' can work here.
