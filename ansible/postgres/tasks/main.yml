---
- name: Install PostgreSQL 15 packages
  ansible.builtin.dnf:
    name:
    - postgresql15-server
    - postgresql15-contrib
    - python3-psycopg2
    state: present
  become: true

- name: Initialize PostgreSQL 15 database cluster (AL2023 Standard Command)
  ansible.builtin.command:
    cmd: postgresql-setup --initdb
    creates: /var/lib/pgsql/15/data/postgresql.conf
  become: true

- name: Set correct permissions for PostgreSQL 15 data directory
  ansible.builtin.file:
    path: /var/lib/pgsql/15/data
    owner: postgres
    group: postgres
    recurse: true
    state: directory
  become: true

- name: Apply SELinux context to PostgreSQL data directory
  ansible.builtin.command:
    cmd: restorecon -R /var/lib/pgsql/15/data
  become: true

# ------------------ Fix pg_hba.conf ------------------
- name: Clean up duplicate/malformed entries for 127.0.0.1 in pg_hba.conf
  ansible.builtin.lineinfile:
    path: /var/lib/pgsql/15/data/pg_hba.conf
    regexp: '^host\s+all\s+all\s+127\.0\.0\.1\/32\s+[^#]*$'
    state: absent
  become: true
  notify: Restart PostgreSQL

- name: Set local IPv4 connections to use md5 authentication
  ansible.builtin.lineinfile:
    path: /var/lib/pgsql/15/data/pg_hba.conf
    regexp: '^host\s+all\s+all\s+127\.0\.0\.1\/32\s+(ident|peer)$'
    line: 'host all all 127.0.0.1/32 md5'
    state: present
    backup: yes
  become: true
  notify: Restart PostgreSQL

- name: Ensure PostgreSQL listens on localhost
  ansible.builtin.lineinfile:
    path: /var/lib/pgsql/15/data/postgresql.conf
    regexp: '^#?listen_addresses\s*=\s*.*$'
    line: "listen_addresses = 'localhost'"
    backup: yes
  become: true
  notify: Restart PostgreSQL

- name: Enable and start PostgreSQL service
  ansible.builtin.systemd:
    name: postgresql
    state: started
    enabled: true
  become: true

# --- Database Configuration ---
- name: Create database user ({{ db_user }})
  community.postgresql.postgresql_user:
    name: "{{ db_user }}"
    password: "{{ db_password }}"
    role_attr_flags: CREATEDB,LOGIN
  become: true
  become_user: postgres

- name: Copy init.sql to server
  ansible.builtin.copy:
    src: ../db/init.sql
    dest: /tmp/init.sql
    mode: '0644'
  become: true

- name: Run init.sql to populate the database
  ansible.builtin.shell: "psql -d postgres -f /tmp/init.sql"
  become: true
  become_user: postgres
